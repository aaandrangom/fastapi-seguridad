import pyodbc
from fastapi import FastAPI

app = FastAPI()

# Configuración de la conexión a la base de datos
server = "apdistserver.database.windows.net"
database = "SecurityDB"
user = "aaandrangom"
psw = "QuinaMiTio123"

# Cadena de conexión
conn_str = (
    "DRIVER={ODBC Driver 17 for SQL Server};"
    f"SERVER={server},{1433};"
    f"DATABASE={database};"
    f"UID={user};"
    f"PWD={psw};"
)

# Método GET para verificar la conexión a la base de datos
@app.get("/")
async def root():
    try:
        # Establecer la conexión a la base de datos
        conn = pyodbc.connect(conn_str)

        return {"message": "Conexión exitosa a la base de datos"}
    except Exception as e:
        return {"message": "Error al conectar a la base de datos", "error": str(e)}

@app.get("/permission")
async def get_permission():
    try:
        # Establecer la conexión a la base de datos
        conn = pyodbc.connect(connection_string)
        cursor = conn.cursor()

        # Ejecutar la consulta para obtener los datos de la tabla "Permission"
        query = "clselect * from Permission"
        cursor.execute(query)

        # Obtener todos los registros y convertirlos en una lista de diccionarios
        rows = cursor.fetchall()
        result = []
        columns = [column[0] for column in cursor.description]
        for row in rows:
            result.append(dict(zip(columns, row)))

        # Cerrar la conexión a la base de datos
        conn.close()

        return {"permission": result}
    except Exception as e:
        return {"message": "Error al obtener los datos de la tabla Permission", "error": str(e)}


# Método POST para insertar datos en la tabla "Permission"
@app.post("/permission")
async def create_permission(perm_sequential: int, perm_permission: str, perm_description: str, perm_state: str, perm_date_db: str):
    try:
        # Establecer la conexión a la base de datos
        conn = pyodbc.connect(conn_str)
        cursor = conn.cursor()

        # Ejecutar la consulta para insertar los datos en la tabla "Permission"
        query = "INSERT INTO Permission (perm_sequential, perm_permission, perm_description, perm_state, perm_date_db) VALUES (?, ?, ?, ?, ?)"
        values = (perm_sequential, perm_permission, perm_description, perm_state, perm_date_db)
        cursor.execute(query, values)
        conn.commit()

        # Cerrar la conexión a la base de datos
        conn.close()

        return {"message": "Datos insertados correctamente en la tabla Permission"}
    except Exception as e:
        return {"message": "Error al insertar datos en la tabla Permission", "error": str(e)}

if __name__ == "__main__":
    import uvicorn

    uvicorn.run(app, host="0.0.0.0", port=8080)
